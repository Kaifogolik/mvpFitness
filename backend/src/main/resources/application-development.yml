spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    
  h2:
    console:
      enabled: true
      path: /h2-console
      
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    
  redis:
    host: localhost
    port: 6379

# Telegram Bot Configuration для разработки
telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN:8375716243:AAHjRBrv3aTZztFQlFf2TPr2oMmav72lU_c}
    username: ${TELEGRAM_BOT_USERNAME:fitcoach_ai_bot}
    webhook-url: ${TELEGRAM_WEBHOOK_URL:}

# OpenAI Configuration (НАСТРОЕН С РЕАЛЬНЫМ КЛЮЧОМ!)
openai:
  api-key: ${OPENAI_API_KEY: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}
  model: gpt-4o  # Проверенная модель + оптимизации токенов
  max-tokens: 150     # Минимальный ответ для экономии (было 800!)
  temperature: 0.0    # Максимальная точность

# App Configuration
app:
  mini-app:
    url: ${MINI_APP_URL:http://localhost:8080}

logging:
  level:
    com.fitcoach: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.telegram: INFO 