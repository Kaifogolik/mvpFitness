// FitCoach AI - Telegram Mini App JavaScript
class FitCoachApp {
    constructor() {
        this.tg = window.Telegram.WebApp;
        this.apiBaseUrl = window.location.origin;
        this.currentUser = null;
        this.currentTab = 'dashboard';
        
        this.init();
    }

    init() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
        this.initTelegramWebApp();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
        this.initUI();
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.loadUserData();
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        this.loadDashboardData();
        
        console.log('üöÄ FitCoach AI Mini App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    initTelegramWebApp() {
        // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram WebApp
        this.tg.ready();
        this.tg.expand();
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
        this.applyTelegramTheme();
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
        this.tg.MainButton.setText('–î–æ–±–∞–≤–∏—Ç—å –ø–∏—Ç–∞–Ω–∏–µ');
        this.tg.MainButton.onClick(() => this.addFood());
        
        // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
        const user = this.tg.initDataUnsafe?.user;
        if (user) {
            this.currentUser = {
                id: user.id,
                firstName: user.first_name,
                lastName: user.last_name,
                username: user.username,
                languageCode: user.language_code
            };
            
            console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram:', this.currentUser);
        }
    }

    applyTelegramTheme() {
        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã Telegram
        const root = document.documentElement;
        
        if (this.tg.colorScheme === 'dark') {
            root.style.setProperty('--tg-theme-bg-color', this.tg.themeParams.bg_color || '#1a1a1a');
            root.style.setProperty('--tg-theme-text-color', this.tg.themeParams.text_color || '#ffffff');
            root.style.setProperty('--tg-theme-secondary-bg-color', this.tg.themeParams.secondary_bg_color || '#2a2a2a');
            root.style.setProperty('--tg-theme-hint-color', this.tg.themeParams.hint_color || '#8e8e93');
        }
    }

    initUI() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.initTabNavigation();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        this.initEventHandlers();
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ UI
        this.updateUserUI();
    }

    initTabNavigation() {
        const navTabs = document.querySelectorAll('.nav-tab');
        const tabContents = document.querySelectorAll('.tab-content');

        navTabs.forEach(tab => {
            tab.addEventListener('click', () => {
                const targetTab = tab.dataset.tab;
                
                // –£–¥–∞–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö —Ç–∞–±–æ–≤
                navTabs.forEach(t => t.classList.remove('active'));
                tabContents.forEach(content => content.classList.remove('active'));
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ç–∞–±—É
                tab.classList.add('active');
                document.getElementById(targetTab).classList.add('active');
                
                this.currentTab = targetTab;
                this.onTabChange(targetTab);
            });
        });
    }

    initEventHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–∏–æ–¥–∞ –≤ Progress —Ç–∞–±–µ
        const periodBtns = document.querySelectorAll('.period-btn');
        periodBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                periodBtns.forEach(b => b.classList.remove('active'));
                btn.classList.add('active');
                this.loadProgressData(btn.dataset.period);
            });
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ pull-to-refresh
        if (this.tg.isVersionAtLeast('6.2')) {
            this.tg.onEvent('reloadPage', () => {
                this.refreshData();
            });
        }
    }

    updateUserUI() {
        if (this.currentUser) {
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const userNameElement = document.getElementById('userName');
            const profileNameElement = document.getElementById('profileName');
            const avatarTextElement = document.getElementById('avatarText');
            
            const fullName = `${this.currentUser.firstName} ${this.currentUser.lastName || ''}`.trim();
            
            if (userNameElement) userNameElement.textContent = fullName;
            if (profileNameElement) profileNameElement.textContent = fullName;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä (–ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã –∏–º–µ–Ω–∏)
            if (avatarTextElement && this.currentUser.firstName) {
                const initials = this.currentUser.firstName.charAt(0) + 
                               (this.currentUser.lastName ? this.currentUser.lastName.charAt(0) : '');
                avatarTextElement.textContent = initials.toUpperCase();
            }
        }
    }

    onTabChange(tabName) {
        // –õ–æ–≥–∏–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–∞–±–∞
        switch(tabName) {
            case 'dashboard':
                this.loadDashboardData();
                this.tg.MainButton.setText('–î–æ–±–∞–≤–∏—Ç—å –ø–∏—Ç–∞–Ω–∏–µ');
                this.tg.MainButton.show();
                break;
            case 'nutrition':
                this.loadNutritionData();
                this.tg.MainButton.setText('–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–µ–º –ø–∏—â–∏');
                this.tg.MainButton.show();
                break;
            case 'progress':
                this.loadProgressData('week');
                this.tg.MainButton.hide();
                break;
            case 'profile':
                this.loadProfileData();
                this.tg.MainButton.hide();
                break;
        }
    }

    // API –º–µ—Ç–æ–¥—ã
    async apiCall(endpoint, method = 'GET', data = null) {
        const url = `${this.apiBaseUrl}${endpoint}`;
        const options = {
            method,
            headers: {
                'Content-Type': 'application/json',
            }
        };

        if (data) {
            options.body = JSON.stringify(data);
        }

        try {
            const response = await fetch(url, options);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return await response.json();
        } catch (error) {
            console.error('‚ùå API Error:', error);
            this.showError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            throw error;
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    async loadUserData() {
        try {
            // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API
            const health = await this.apiCall('/api/test/health');
            console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å API —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', health);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        }
    }

    async loadDashboardData() {
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞—à–±–æ—Ä–¥–∞
            const info = await this.apiCall('/api/test/info');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            this.updateDashboardUI({
                todayCalories: Math.floor(Math.random() * 1500) + 500,
                currentWeight: '75.2 –∫–≥',
                dailyGoal: 2000,
                streakDays: Math.floor(Math.random() * 30) + 1
            });
            
            console.log('üìä –î–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞:', error);
        }
    }

    updateDashboardUI(data) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
        document.getElementById('todayCalories').textContent = data.todayCalories;
        document.getElementById('currentWeight').textContent = data.currentWeight;
        document.getElementById('dailyGoal').textContent = data.dailyGoal;
        document.getElementById('streakDays').textContent = data.streakDays;

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–ª–æ—Ä–∏–π –≤ –ø–∏—Ç–∞–Ω–∏–∏
        document.getElementById('consumedCalories').textContent = data.todayCalories;
        document.getElementById('remainingCalories').textContent = Math.max(0, data.dailyGoal - data.todayCalories);
    }

    async loadNutritionData() {
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–∏—Ç–∞–Ω–∏–∏
        console.log('üçé –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–∏—Ç–∞–Ω–∏–∏...');
        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –ø–∏—Ç–∞–Ω–∏—è –∏–∑ API
    }

    async loadProgressData(period) {
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        console.log(`üìà –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞: ${period}`);
        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–∑ API
    }

    async loadProfileData() {
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
        console.log('üë§ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è...');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ—Ñ–∏–ª—è
        document.getElementById('totalDays').textContent = Math.floor(Math.random() * 100) + 1;
        document.getElementById('totalMeals').textContent = Math.floor(Math.random() * 200);
        document.getElementById('totalWorkouts').textContent = Math.floor(Math.random() * 50);
    }

    // –£—Ç–∏–ª–∏—Ç—ã
    showLoading() {
        document.getElementById('loadingOverlay').classList.add('show');
    }

    hideLoading() {
        document.getElementById('loadingOverlay').classList.remove('show');
    }

    showError(message) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ Telegram
        if (this.tg.showAlert) {
            this.tg.showAlert(message);
        } else {
            alert(message);
        }
    }

    showSuccess(message) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        if (this.tg.showAlert) {
            this.tg.showAlert(message);
        } else {
            alert(message);
        }
    }

    async refreshData() {
        this.showLoading();
        try {
            await this.loadUserData();
            await this.loadDashboardData();
            this.showSuccess('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
        } catch (error) {
            this.showError('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
        } finally {
            this.hideLoading();
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è HTML
window.addFood = function() {
    app.showLoading();
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–¥—ã
    setTimeout(() => {
        app.hideLoading();
        app.showSuccess('–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–¥—ã –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å OpenAI API');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–æ—Ä–∏–∏ (–¥–µ–º–æ)
        const currentCalories = parseInt(document.getElementById('todayCalories').textContent) || 0;
        const newCalories = currentCalories + Math.floor(Math.random() * 300) + 100;
        document.getElementById('todayCalories').textContent = newCalories;
        document.getElementById('consumedCalories').textContent = newCalories;
        
        const remaining = Math.max(0, 2000 - newCalories);
        document.getElementById('remainingCalories').textContent = remaining;
    }, 1000);
};

window.addWeight = function() {
    const weight = prompt('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—É—â–∏–π –≤–µ—Å (–∫–≥):');
    if (weight && !isNaN(weight)) {
        document.getElementById('currentWeight').textContent = `${weight} –∫–≥`;
        app.showSuccess(`–í–µ—Å ${weight} –∫–≥ –∑–∞–ø–∏—Å–∞–Ω!`);
    }
};

window.addWorkout = function() {
    app.showSuccess('–§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ (–¥–µ–º–æ)
    const workoutsElement = document.getElementById('totalWorkouts');
    if (workoutsElement) {
        const current = parseInt(workoutsElement.textContent) || 0;
        workoutsElement.textContent = current + 1;
    }
};

window.aiChat = function() {
    app.showSuccess('AI –ü–æ–º–æ—â–Ω–∏–∫ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å OpenAI GPT-4');
};

window.editProfile = function() {
    app.showSuccess('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
};

window.becomeCoach = function() {
    if (app.tg.showConfirm) {
        app.tg.showConfirm('–•–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–æ–º? –≠—Ç–æ –¥–∞—Å—Ç –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Ö–æ–¥ –æ—Ç —É—á–µ–Ω–∏–∫–æ–≤.', (confirmed) => {
            if (confirmed) {
                document.getElementById('userStatus').textContent = 'Coach';
                document.getElementById('profileRole').textContent = '–¢—Ä–µ–Ω–µ—Ä';
                app.showSuccess('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å –≤—ã —Ç—Ä–µ–Ω–µ—Ä!');
            }
        });
    } else {
        const confirmed = confirm('–•–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–æ–º?');
        if (confirmed) {
            document.getElementById('userStatus').textContent = 'Coach';
            document.getElementById('profileRole').textContent = '–¢—Ä–µ–Ω–µ—Ä';
            app.showSuccess('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å –≤—ã —Ç—Ä–µ–Ω–µ—Ä!');
        }
    }
};

window.shareApp = function() {
    const shareUrl = 'https://t.me/mvpfitness_bot';
    const shareText = 'ü§ñ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ FitCoach AI - —É–º–Ω–æ–≥–æ —Ñ–∏—Ç–Ω–µ—Å-–ø–æ–º–æ—â–Ω–∏–∫–∞ —Å –∞–Ω–∞–ª–∏–∑–æ–º –ø–∏—Ç–∞–Ω–∏—è!';
    
    if (app.tg.openTelegramLink) {
        app.tg.openTelegramLink(`https://t.me/share/url?url=${encodeURIComponent(shareUrl)}&text=${encodeURIComponent(shareText)}`);
    } else {
        navigator.share({
            title: 'FitCoach AI',
            text: shareText,
            url: shareUrl
        }).catch(() => {
            // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ –±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Web Share API
            const url = `https://t.me/share/url?url=${encodeURIComponent(shareUrl)}&text=${encodeURIComponent(shareText)}`;
            window.open(url, '_blank');
        });
    }
};

window.logout = function() {
    if (app.tg.showConfirm) {
        app.tg.showConfirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?', (confirmed) => {
            if (confirmed) {
                app.tg.close();
            }
        });
    } else {
        const confirmed = confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?');
        if (confirmed) {
            window.close();
        }
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let app;
document.addEventListener('DOMContentLoaded', () => {
    app = new FitCoachApp();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', (event) => {
    console.error('üö® –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º–∏—Å–æ–≤ —Å –æ—à–∏–±–∫–∞–º–∏
window.addEventListener('unhandledrejection', (event) => {
    console.error('üö® –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–º–∏—Å–∞:', event.reason);
    event.preventDefault();
}); 