package com.fitcoach.infrastructure.telegram;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.ArrayList;
import java.util.List;

@Component
public class TelegramKeyboardFactory {
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é
     */
    public ReplyKeyboardMarkup createMainMenuKeyboard() {
        ReplyKeyboardMarkup keyboard = new ReplyKeyboardMarkup();
        keyboard.setResizeKeyboard(true);
        keyboard.setOneTimeKeyboard(false);
        
        List<KeyboardRow> keyboardRows = new ArrayList<>();
        
        // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üì∏ –ê–Ω–∞–ª–∏–∑ –µ–¥—ã"));
        row1.add(new KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"));
        keyboardRows.add(row1);
        
        // –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - –ø—Ä–æ—Ñ–∏–ª—å –∏ —Ç—Ä–µ–Ω–µ—Ä
        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å"));
        row2.add(new KeyboardButton("üë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä"));
        keyboardRows.add(row2);
        
        // –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞ - –ø–æ–º–æ—â—å
        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("‚ùì –ü–æ–º–æ—â—å"));
        keyboardRows.add(row3);
        
        keyboard.setKeyboard(keyboardRows);
        return keyboard;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–æ–≤
     */
    public ReplyKeyboardMarkup createCoachKeyboard() {
        ReplyKeyboardMarkup keyboard = new ReplyKeyboardMarkup();
        keyboard.setResizeKeyboard(true);
        keyboard.setOneTimeKeyboard(false);
        
        List<KeyboardRow> keyboardRows = new ArrayList<>();
        
        // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - —É—á–µ–Ω–∏–∫–∏ –∏ –¥–æ—Ö–æ–¥—ã
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üë• –ú–æ–∏ —É—á–µ–Ω–∏–∫–∏"));
        row1.add(new KeyboardButton("üí∞ –î–æ—Ö–æ–¥—ã"));
        keyboardRows.add(row1);
        
        // –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Ä–µ–∫–ª–∞–º–∞
        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"));
        row2.add(new KeyboardButton("üîó –†–µ—Ñ. —Å—Å—ã–ª–∫–∞"));
        keyboardRows.add(row2);
        
        // –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞ - –æ–±—ã—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üì∏ –ê–Ω–∞–ª–∏–∑ –µ–¥—ã"));
        row3.add(new KeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å"));
        keyboardRows.add(row3);
        
        // –ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ - –ø–æ–º–æ—â—å
        KeyboardRow row4 = new KeyboardRow();
        row4.add(new KeyboardButton("‚ùì –ü–æ–º–æ—â—å"));
        keyboardRows.add(row4);
        
        keyboard.setKeyboard(keyboardRows);
        return keyboard;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏
     */
    public ReplyKeyboardMarkup createMealTypeKeyboard() {
        ReplyKeyboardMarkup keyboard = new ReplyKeyboardMarkup();
        keyboard.setResizeKeyboard(true);
        keyboard.setOneTimeKeyboard(true);
        
        List<KeyboardRow> keyboardRows = new ArrayList<>();
        
        // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–µ–º—ã –ø–∏—â–∏
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üåÖ –ó–∞–≤—Ç—Ä–∞–∫"));
        row1.add(new KeyboardButton("üåû –û–±–µ–¥"));
        row1.add(new KeyboardButton("üåô –£–∂–∏–Ω"));
        keyboardRows.add(row1);
        
        // –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - –ø–µ—Ä–µ–∫—É—Å—ã –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üçé –ü–µ—Ä–µ–∫—É—Å"));
        row2.add(new KeyboardButton("üí™ –î–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"));
        keyboardRows.add(row2);
        
        // –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞
        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üèãÔ∏è –ü–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"));
        keyboardRows.add(row3);
        
        keyboard.setKeyboard(keyboardRows);
        return keyboard;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
     */
    public ReplyKeyboardMarkup createBackKeyboard() {
        ReplyKeyboardMarkup keyboard = new ReplyKeyboardMarkup();
        keyboard.setResizeKeyboard(true);
        keyboard.setOneTimeKeyboard(false);
        
        List<KeyboardRow> keyboardRows = new ArrayList<>();
        
        KeyboardRow row = new KeyboardRow();
        row.add(new KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"));
        keyboardRows.add(row);
        
        keyboard.setKeyboard(keyboardRows);
        return keyboard;
    }
    
    /**
     * –£–¥–∞–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
     */
    public ReplyKeyboardMarkup removeKeyboard() {
        ReplyKeyboardMarkup keyboard = new ReplyKeyboardMarkup();
        keyboard.setRemoveKeyboard(true);
        return keyboard;
    }
} 