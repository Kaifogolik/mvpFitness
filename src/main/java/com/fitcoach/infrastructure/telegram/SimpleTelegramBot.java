package com.fitcoach.infrastructure.telegram;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

@Component
public class SimpleTelegramBot extends TelegramLongPollingBot {
    
    @Value("${telegram.bot.token}")
    private String botToken;
    
    @Value("${telegram.bot.username}")
    private String botUsername;

    @Override
    public String getBotUsername() {
        return botUsername;
    }

    @Override
    public String getBotToken() {
        return botToken;
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();
            String userName = update.getMessage().getFrom().getFirstName();

            String responseText = "";

            switch (messageText) {
                case "/start":
                    responseText = "üéØ –ü—Ä–∏–≤–µ—Ç, " + userName + "!\n\n" +
                                 "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FitCoach AI! ü§ñ\n\n" +
                                 "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
                                 "/help - –ü–æ–º–æ—â—å\n" +
                                 "/about - –û –ø—Ä–æ–µ–∫—Ç–µ\n" +
                                 "/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã";
                    break;

                case "/help":
                    responseText = "üìã –ü–æ–º–æ—â—å –ø–æ FitCoach AI:\n\n" +
                                 "ü§ñ –≠—Ç–æ MVP –≤–µ—Ä—Å–∏—è —Ñ–∏—Ç–Ω–µ—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã\n" +
                                 "üì∏ –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è: –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ –µ–¥—ã\n" +
                                 "üë®‚Äçüè´ –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è: —Å–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–Ω–µ—Ä-—É—á–µ–Ω–∏–∫\n" +
                                 "üí∞ –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è: –ø–æ–¥–ø–∏—Å–∫–∏\n\n" +
                                 "–ö–æ–º–∞–Ω–¥—ã:\n" +
                                 "/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n" +
                                 "/about - –û –ø—Ä–æ–µ–∫—Ç–µ\n" +
                                 "/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å";
                    break;

                case "/about":
                    responseText = "üöÄ FitCoach AI Platform\n\n" +
                                 "–£–º–Ω–∞—è —Ñ–∏—Ç–Ω–µ—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –ò–ò-–∞–Ω–∞–ª–∏–∑–æ–º –ø–∏—Ç–∞–Ω–∏—è\n" +
                                 "–∏ —Å–∏—Å—Ç–µ–º–æ–π —Ç—Ä–µ–Ω–µ—Ä-—É—á–µ–Ω–∏–∫.\n\n" +
                                 "üîß –í–µ—Ä—Å–∏—è: MVP 1.0\n" +
                                 "üõ†Ô∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: Spring Boot + OpenAI\n" +
                                 "üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Telegram Mini App\n\n" +
                                 "GitHub: https://github.com/Kaifogolik/mvpFitness";
                    break;

                case "/status":
                    responseText = "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!\n\n" +
                                 "ü§ñ Telegram Bot: –ê–∫—Ç–∏–≤–µ–Ω\n" +
                                 "üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: H2 (–≤ –ø–∞–º—è—Ç–∏)\n" +
                                 "üîß Spring Boot: –ó–∞–ø—É—â–µ–Ω\n" +
                                 "üì° API: –î–æ—Å—Ç—É–ø–µ–Ω\n\n" +
                                 "Swagger UI: http://localhost:8080/swagger-ui.html";
                    break;

                default:
                    responseText = "ü§î –ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É: " + messageText + "\n\n" +
                                 "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n" +
                                 "/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n" +
                                 "/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã";
                    break;
            }

            sendMessage(chatId, responseText);
        }
    }

    private void sendMessage(long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(text);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            System.err.println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: " + e.getMessage());
        }
    }
} 